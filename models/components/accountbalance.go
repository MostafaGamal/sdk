// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/MostafaGamal/sdk/internal/utils"
	"github.com/MostafaGamal/sdk/types"
)

// AccountBalanceOptional - Optional data associated with the balance.<br /><br /><strong>Note:</strong> `optional` parameter will always be present, but the array may be empty, or it may contain all or some of the parameters listed below.
type AccountBalanceOptional struct {
	// Type of the balance.
	BalanceType *string `json:"balance_type,omitempty"`
	// The last date when the bank updated the balance.
	SourceDate *types.Date `json:"source_date,omitempty"`
	// The last time when the bank updated the balance.
	SourceTime *string `json:"source_time,omitempty"`
	// The available amount of funds in the account's currency.
	AvailableAmount *float32 `json:"available_amount,omitempty"`
	// The blocked amount of funds in the account's currency.
	BlockedAmount *float32 `json:"blocked_amount,omitempty"`
	// The maximum amount of funds that the user can spend.
	CreditLimit *float32 `json:"credit_limit,omitempty"`
	// Closing balance.
	ClosingBalance *float32 `json:"closing_balance,omitempty"`
	// Opening balance.
	OpeningBalance *float32 `json:"opening_balance,omitempty"`
}

func (a AccountBalanceOptional) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountBalanceOptional) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountBalanceOptional) GetBalanceType() *string {
	if o == nil {
		return nil
	}
	return o.BalanceType
}

func (o *AccountBalanceOptional) GetSourceDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.SourceDate
}

func (o *AccountBalanceOptional) GetSourceTime() *string {
	if o == nil {
		return nil
	}
	return o.SourceTime
}

func (o *AccountBalanceOptional) GetAvailableAmount() *float32 {
	if o == nil {
		return nil
	}
	return o.AvailableAmount
}

func (o *AccountBalanceOptional) GetBlockedAmount() *float32 {
	if o == nil {
		return nil
	}
	return o.BlockedAmount
}

func (o *AccountBalanceOptional) GetCreditLimit() *float32 {
	if o == nil {
		return nil
	}
	return o.CreditLimit
}

func (o *AccountBalanceOptional) GetClosingBalance() *float32 {
	if o == nil {
		return nil
	}
	return o.ClosingBalance
}

func (o *AccountBalanceOptional) GetOpeningBalance() *float32 {
	if o == nil {
		return nil
	}
	return o.OpeningBalance
}

type AccountBalance struct {
	AccountID    *int64 `json:"account_id,omitempty"`
	ConnectionID *int64 `json:"connection_id,omitempty"`
	// The code of the currency in <a href='https://en.wikipedia.org/wiki/ISO_4217' target='_blank'>ISO 4217</a> format.
	CurrencyCode *string `json:"currency_code,omitempty"`
	// The current balance of the account/connection.
	Balance *float32 `json:"balance,omitempty"`
	// Optional data associated with the balance.<br /><br /><strong>Note:</strong> `optional` parameter will always be present, but the array may be empty, or it may contain all or some of the parameters listed below.
	Optional *AccountBalanceOptional `json:"optional,omitempty"`
}

func (o *AccountBalance) GetAccountID() *int64 {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *AccountBalance) GetConnectionID() *int64 {
	if o == nil {
		return nil
	}
	return o.ConnectionID
}

func (o *AccountBalance) GetCurrencyCode() *string {
	if o == nil {
		return nil
	}
	return o.CurrencyCode
}

func (o *AccountBalance) GetBalance() *float32 {
	if o == nil {
		return nil
	}
	return o.Balance
}

func (o *AccountBalance) GetOptional() *AccountBalanceOptional {
	if o == nil {
		return nil
	}
	return o.Optional
}
