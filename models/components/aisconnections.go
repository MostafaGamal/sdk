// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/MostafaGamal/sdk/internal/utils"
	"time"
)

type AisConnections struct {
	// The `id` of the account.
	ID *int64 `json:"id,omitempty"`
	// The `id` of the last user's provided ais consent.
	LastAisConsentID *int64 `json:"last_ais_consent_id,omitempty"`
	// The `id` of the bank that the account is associated with.
	BankID *int64 `json:"bank_id,omitempty"`
	// Whether the account is active or not.
	IsActive *bool `json:"is_active,omitempty"`
	// Whether the account is refreshable or not.
	IsRefreshable *bool `json:"is_refreshable,omitempty"`
	// The timestamp when the account was created, in RFC 3339 format.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The timestamp when the account was last updated, in RFC 3339 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (a AisConnections) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AisConnections) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AisConnections) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AisConnections) GetLastAisConsentID() *int64 {
	if o == nil {
		return nil
	}
	return o.LastAisConsentID
}

func (o *AisConnections) GetBankID() *int64 {
	if o == nil {
		return nil
	}
	return o.BankID
}

func (o *AisConnections) GetIsActive() *bool {
	if o == nil {
		return nil
	}
	return o.IsActive
}

func (o *AisConnections) GetIsRefreshable() *bool {
	if o == nil {
		return nil
	}
	return o.IsRefreshable
}

func (o *AisConnections) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *AisConnections) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
