// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/MostafaGamal/sdk/internal/utils"
	"github.com/MostafaGamal/sdk/models/components"
)

var GetAccessTokenServerList = []string{
	"https://auth.thefinxdev.io",
	"https://auth.thefinx.io",
}

type GetAccessTokenRequestBody struct {
	// Your SPA Client ID.
	ClientID string `form:"name=client_id"`
	// The `grant_type` parameter must be set to `authorization_code`.
	GrantType *string `default:"authorization_code" form:"name=grant_type"`
	// Your authorization code.
	Code string `form:"name=code"`
	// Your SPA URL.
	RedirectURI string `form:"name=redirect_uri"`
	// Your code verifier which used to generate the code challenge in authorization request.
	CodeVerifier string `form:"name=code_verifier"`
}

func (g GetAccessTokenRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAccessTokenRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetAccessTokenRequestBody) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *GetAccessTokenRequestBody) GetGrantType() *string {
	if o == nil {
		return nil
	}
	return o.GrantType
}

func (o *GetAccessTokenRequestBody) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

func (o *GetAccessTokenRequestBody) GetRedirectURI() string {
	if o == nil {
		return ""
	}
	return o.RedirectURI
}

func (o *GetAccessTokenRequestBody) GetCodeVerifier() string {
	if o == nil {
		return ""
	}
	return o.CodeVerifier
}

// GetAccessTokenResponseBody - Created
type GetAccessTokenResponseBody struct {
	// Access Token to be used in requests to FINX PFM APIs.
	AccessToken *string `json:"access_token,omitempty"`
	// Application scopes on requested API, separated by spaces.
	Scope *string `json:"scope,omitempty"`
	// Number of seconds after which an Access Token will expire.
	ExpiresIn *int64 `json:"expires_in,omitempty"`
	// Your Access Token type.
	TokenType *string `json:"token_type,omitempty"`
}

func (o *GetAccessTokenResponseBody) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *GetAccessTokenResponseBody) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *GetAccessTokenResponseBody) GetExpiresIn() *int64 {
	if o == nil {
		return nil
	}
	return o.ExpiresIn
}

func (o *GetAccessTokenResponseBody) GetTokenType() *string {
	if o == nil {
		return nil
	}
	return o.TokenType
}

type GetAccessTokenResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	Object *GetAccessTokenResponseBody
}

func (o *GetAccessTokenResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAccessTokenResponse) GetObject() *GetAccessTokenResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
